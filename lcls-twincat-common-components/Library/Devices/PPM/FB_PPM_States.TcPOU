<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="FB_PPM_States" Id="{1eb578bc-c89e-4a7a-b190-99dc56373dc2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PPM_States EXTENDS FB_PositionStateBase_WithPMPS
VAR_INPUT
    {attribute 'pytmc' := '
        pv: SET
        io: io
    '}
    enumSet: ENUM_PPM_states;

    stOut: DUT_PositionState;
    stPower: DUT_PositionState;
    stYag1: DUT_PositionState;
    stYag2: DUT_PositionState;

    bStatesLock: BOOL;
END_VAR
VAR_OUTPUT
    {attribute 'pytmc' := '
        pv: GET
        io: i
    '}
    enumGet: ENUM_PPM_States;
END_VAR
VAR
    fbStateDefaults: FB_PositionState_Defaults;
    bPPMInit: BOOL;
END_VAR
VAR CONSTANT
    // These are the default values
    // Set values on states prior to passing in for non-default values
    fInDelta: LREAL := 2;
    fOutDelta: LREAL := 2;
    fInVelocity: LREAL := 1;
    fOutVelocity: LREAL := 1;
    fAccel: LREAL := 200;
    fOutDecel: LREAL := 25;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bPPMInit THEN
    bPPMInit := TRUE;

    stOut.sName := 'OUT';
    fbStateDefaults(
        stPositionState:=stOut,
        fVeloDefault:=fOutVelocity,
        fDeltaDefault:=fOutDelta,
        fAccelDefault:=fAccel,
        fDecelDefault:=fOutDecel,
    );
    stOut.bMoveOk := TRUE;

    stPower.sName := 'POWERMETER';
    fbStateDefaults(
        stPositionState:=stPower,
        fVeloDefault:=fInVelocity,
        fDeltaDefault:=fInDelta,
        fAccelDefault:=fAccel,
        fDecelDefault:=fAccel,
    );
    stPower.bMoveOk := TRUE;

    stYag1.sName := 'YAG1';
    fbStateDefaults(
        stPositionState:=stYag1,
        fVeloDefault:=fInVelocity,
        fDeltaDefault:=fInDelta,
        fAccelDefault:=fAccel,
        fDecelDefault:=fAccel,
    );
    stYag1.bMoveOk := TRUE;

    stYag2.sName := 'YAG2';
    fbStateDefaults(
        stPositionState:=stYag2,
        fVeloDefault:=fInVelocity,
        fDeltaDefault:=fInDelta,
        fAccelDefault:=fAccel,
        fDecelDefault:=fAccel,
    );
    stYag2.bMoveOk := TRUE;

    arrStates[1] := stOut;
    arrStates[2] := stPower;
    arrStates[3] := stYag1;
    arrStates[4] := stYag2;
END_IF

setState := enumSet;
Exec();
enumGet := getState;
enumSet := setState;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>