<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="FB_PPM_States" Id="{1eb578bc-c89e-4a7a-b190-99dc56373dc2}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PPM_States EXTENDS FB_PositionStateBase_WithPMPS
VAR_INPUT
    {attribute 'pytmc' := '
        pv: SET
        io: io
    '}
    enumSet: ENUM_PPM_states;

    stOut: DUT_PositionState;
    stPower: DUT_PositionState;
    stYag1: DUT_PositionState;
    stYag2: DUT_PositionState;

    bStatesLock: BOOL;
END_VAR
VAR_OUTPUT
    {attribute 'pytmc' := '
        pv: GET
        io: i
    '}
    enumGet: ENUM_PPM_States;
END_VAR
VAR
    bPPMInit: BOOL;
END_VAR
VAR CONSTANT
    // These are the default values
    // Set values on states prior to passing in for non-default values
    fInDelta: LREAL := 2;
    fOutDelta: LREAL := 2;
    fInVelocity: LREAL := 1;
    fOutVelocity: LREAL := 1;
    fAccel: LREAL := 200;
    fOutDecel: LREAL := 25;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF NOT bPPMInit THEN
    bPPMInit := TRUE;

    stOut.sName := 'OUT';
    IF stOut.fVelocity = 0 THEN
        stOut.fVelocity := fOutVelocity;
	END_IF
    IF stOut.fDelta = 0 THEN
        stOut.fDelta := fOutDelta;
	END_IF
    IF stOut.fAccel = 0 THEN
        stOut.fAccel := fAccel;
	END_IF
    IF stOut.fDecel = 0 THEN
        stOut.fDecel := fOutDecel;
	END_IF
    stOut.bMoveOk := TRUE;

    stPower.sName := 'POWERMETER';
    IF stPower.fVelocity = 0 THEN
        stPower.fVelocity := fInVelocity;
	END_IF
    IF stPower.fDelta = 0 THEN
        stPower.fDelta := fInDelta;
	END_IF
    IF stPower.fAccel = 0 THEN
        stPower.fAccel := fAccel;        
	END_IF
    IF stPower.fDecel = 0 THEN
        stPower.fDecel := fAccel;        
	END_IF
    stPower.bMoveOk := TRUE;

    stYag1.sName := 'YAG1';
    IF stYag1.fVelocity = 0 THEN
        stYag1.fVelocity := fInVelocity;
	END_IF
    IF stYag1.fDelta = 0 THEN
        stYag1.fDelta := fInDelta;
	END_IF
    IF stYag1.fAccel = 0 THEN
        stYag1.fAccel := fAccel;
	END_IF
    IF stYag1.fDecel = 0 THEN
        stYag1.fDecel := fAccel;
	END_IF
    stYag1.bMoveOk := TRUE;

    stYag2.sName := 'YAG2';
    IF stYag2.fVelocity = 0 THEN
        stYag2.fVelocity := fInVelocity;
	END_IF
    IF stYag2.fDelta = 0 THEN
        stYag2.fDelta := fInDelta;
	END_IF
    IF stYag2.fAccel = 0 THEN
        stYag2.fAccel := fAccel;
	END_IF
    IF stYag2.fDecel = 0 THEN
        stYag2.fDecel := fAccel;
	END_IF
    stYag2.bMoveOk := TRUE;

    arrStates[1] := stOut;
    arrStates[2] := stPower;
    arrStates[3] := stYag1;
    arrStates[4] := stYag2;
END_IF

setState := enumSet;
Exec();
enumGet := getState;
enumSet := setState;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>