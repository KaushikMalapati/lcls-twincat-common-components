<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.12">
  <POU Name="FB_PPM_PowerMeter" Id="{fedad4c7-7971-4466-a86d-d67d48d0e596}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PPM_PowerMeter
VAR
	iVoltageINT AT %I*: INT;
	
	{attribute 'pytmc' := '
		pv: VOLT
		io: input
	'}
	fVoltage: LREAL;
	
	{attribute 'pytmc' := '
		pv: VOLT_BUFFER
		io: input
	'}
	fVoltageBuffer: ARRAY[0..999] OF LREAL;
	
	{attribute 'pytmc' := '
		pv: MJ
		io: input
	'}
	fCalibMJ: LREAL;
	
	{attribute 'pytmc' := '
		pv: MJ_BUFFER
		io: input
	'}
	fCalibMJBuffer: ARRAY[0..999] OF LREAL;
	
	{attribute 'pytmc' := '
		pv: STC
		io: input
	'}
	fbThermoCouple: FB_ThermoCouple;

	fbGetPMVoltage: FB_RawToAnalog;
	fbVoltageBuffer: FB_DataBuffer;
	fbMJBuffer: FB_DataBuffer;
	
	fCalibMJPartial: ARRAY[0..999] OF LREAL;
	fVoltagePartial: ARRAY[0..999] OF LREAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[fbThermoCouple();

// Convert the terminal's integer into a value in volts
fbGetPMVoltage(
	iRaw := iVoltageINT,
	iBits := 15,
	fMax := 10,
	fMin := 0,
	fReal => fVoltage);

// TODO Power meter calibration
fCalibMJ := fVoltage;

// Buffer the full-rate Voltage and calibrated MJ values
fbVoltageBuffer(
	fInput := fVoltage,
	arrPartialBuffer := fVoltagePartial,
	arrOutputBuffer := fVoltageBuffer);
fbMJBuffer(
	fInput := fCalibMJ,
	arrPartialBuffer := fCalibMJPartial,
	arrOutputBuffer := fCalibMJBuffer);]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>